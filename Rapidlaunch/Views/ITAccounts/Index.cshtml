@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@model IEnumerable<Rapidlaunch.Models.ITAccount>

@{
    ViewData["Title"] = "Index";
}<!-- checks if user is signed in -->
@if (SignInManager.IsSignedIn(User))
{
    <h1>IT Accounts</h1>

    <p>
        <a asp-action="Create">Create New</a>
    </p>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.itaccountTypeIdentID)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.itaccountTypeIdentID)
                    </td>
                    <td>
                        <div class="dropdownIndex">
                            <button class="btn btn-primary dropdown-toggle" type="button" data-toggle="dropdown">
                                Data Option
                                <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu">
                                <a asp-action="Edit" asp-route-id="@item.ITAccountID">Edit</a> |
                                <a asp-action="Details" asp-route-id="@item.ITAccountID">Details</a> |
                                <a asp-action="Delete" asp-route-id="@item.ITAccountID">Delete</a>
                            </ul>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="row">
        <div class="col-md-4">
            <h1>You are not authorised to view this content - <br />Please log in.</h1>
            <br /><a class="btn btn-danger" asp-area="identity" asp-page="/Account/Login">Login</a>
        </div>
    </div>
}
